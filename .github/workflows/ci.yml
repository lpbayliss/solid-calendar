name: CI

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  lint:
    name: Lint Project
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install PNPM
        uses: pnpm/action-setup@v3.0.0
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get PNPM Store Directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup PNPM Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Lint Project
        run: pnpm run lint

  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@lpbayliss"

      - name: Install PNPM
        uses: pnpm/action-setup@v3.0.0
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get PNPM Store Directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup PNPM Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Run Tests
        run: pnpm test:coverage

      - name: Report Coverage
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          file-coverage-mode: all

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lpbayliss'

      - name: Install PNPM
        uses: pnpm/action-setup@v3.0.0
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get PNPM Store Directory 
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup PNPM Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Build Package
        run: pnpm build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm dlx semantic-release